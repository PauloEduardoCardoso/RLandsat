# Unsupervised Classification with R
## http://blog.remote-sensing-conservation.org/unsupervised-classifcation-in-r/
## http://www.digital-geography.com/unsupervised-classification-of-a-landsat-image-in-r-the-whole-story-or-part-two/
# Cluster method
## http://stackoverflow.com/questions/10075122/ordering-clustered-points-using-kmeans-and-r
library(cluster)
l8stk <- l8.files[[2:7]]
l8stk[is.na(l8stk)] <- -9999
l8df <- as.data.frame(l8stk)
#summary(l8stk)

nks <- vector()
for (i in 5:25){
  nk <- i
  nks[i] <- kmeans(l8df, nk, iter.max = 15, nstart = 10)$tot.withinss
}
plot(c(5:25), nks[5:25])

ncl = 12
l8cl <- kmeans(l8df, ncl, iter.max = 20, nstart = 10)
l8cl$centers
l8m <- matrix(l8cl$cluster, nrow = 781, ncol = 505, byrow = TRUE)
k.raster <- raster(l8m, xmn=l8stk@extent@xmin, ymn=l8stk@extent@ymin,
                   xmx=l8stk@extent@xmax, ymx=l8stk@extent@ymax,
                   crs = v.utm28n)
plot(k.raster)
writeRaster(k.raster,paste0('.\kmeans', ncl, 'file.tif'), overwrite = TRUE)

# Function get distance to cluster center
l8df <- cbind(l8df, cl = l8cl$cluster)
head(l8df)
f.ClusterDist <- function(i, data = l8df, clust = l8cl){
  #Extract cluster and center
  if(any(data[i, ] == -9999)){
    idist <- 0
  } else{
    idt <- data[i, 1:(ncol(data) - 1)]
    ict <- clust$centers[data[i , ncol(data)], ]
    #Calculate distances
    idist <- sum((idt - ict)^2)
  }
}
#idt <- x[i, 1:(ncol(x) - 1)]
#ict <- cl$centers[x[i , 3], ]
#sum((idt - ict)^2)
xi <- vector(mode="numeric")
for(i in 1:nrow(l8df)){
 xi[i] <- f.ClusterDist(i, data = l8df, clust = l8cl)
}


l8md <- matrix(l8df$dist, , nrow = 781, ncol = 505, byrow = TRUE)
k.rasterw <- raster(l8md, xmn=l8stk@extent@xmin, ymn=l8stk@extent@ymin,
                    xmx=l8stk@extent@xmax, ymx=l8stk@extent@ymax,
                    crs = v.utm28n)
plot(k.rasterw)
writeRaster(k.rasterw,paste0('.\kmeans_dist', ncl, 'filedist.tif'), overwrite = TRUE)
